name: flickit-keycloak ci-cd

on:
  push:
    branches:
      - 'main'

    tags:
      - 'v*'

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build
        run: docker build -t flickit-keycloak ./docker-context

  Build-Push-Image:
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
    needs: Build
    runs-on: ubuntu-latest
    outputs:
      TAG: ${{ steps.TAG.outputs.tag }}
    permissions:
      contents: read
      packages: write
    
    steps:
    
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set output
        id: TAG
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: flickit-platform
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/flickit-platform/flickit-keycloak
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./docker-context
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  Deploy:
    needs: Build-Push-Image
    runs-on: ubuntu-latest
    steps:
      - name: Deploy service on Webhook
        run: |
          status_code=$(curl --silent --output /dev/null --write-out "%{http_code}" -X POST "${{ secrets.DEPLOY_WEBHOOK_URL_PRODUCTION }}?tag=${TAG}")
          if [ "$status_code" -ne 204 ]; then
            echo "Unexpected status code: $status_code"
            exit 1
          fi
        env:
          TAG: ${{needs.Build-Push-Image.outputs.TAG}}
      

  Build-Push-Image_Latest:
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') }}
    needs: Build
    runs-on: ubuntu-latest
    outputs:
      TAG: "latest"
    permissions:
      contents: read
      packages: write
    
    steps:
    
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set output
        id: TAG
        run: echo "tag=latest" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: flickit-platform
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/flickit-platform/flickit-keycloak
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./docker-context
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  Deploy_Latest:
    needs: Build-Push-Image_Latest
    runs-on: ubuntu-latest
    steps:
      - name: Deploy service on Webhook
        run: |
          status_code=$(curl --silent --output /dev/null --write-out "%{http_code}" -X POST "${{ secrets.DEPLOY_WEBHOOK_URL_PRODUCTION }}?tag=${TAG}")
          if [ "$status_code" -ne 204 ]; then
            echo "Unexpected status code: $status_code"
            exit 1
          fi
        env:
          TAG: ${{needs.Build-Push-Image_Latest.outputs.TAG}}
